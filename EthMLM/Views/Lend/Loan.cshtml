

<div class="container-fluid">
    <div class="page-header">


        <div class="row align-items-end">
            <div class="col-lg-8">
                <div class="page-header-title">
                    <i class="ik ik-minus-circle bg-dark"></i>
                    <div class="d-inline">
                        <h5> Send Coin </h5>
                        <span>Send Gravity Cash (GVCH) </span>
                    </div>
                </div>
            </div>
            <div class="col-lg-4">
                <nav class="breadcrumb-container" aria-label="breadcrumb">
                    <ol class="breadcrumb">

                        <li class="breadcrumb-item">

                        </li>

                    </ol>
                </nav>
            </div>
        </div>

    </div>


    <!--Account Balance --><div class="row clearfix">
        <div class="col-lg-6 col-md-6 col-sm-12">
            <div class="widget bg-dark">
                <div class="widget-body">
                    <div class="d-flex justify-content-between align-items-center">
                        <div class="state">
                            <h6>Account Balance</h6>
                            
                        </div>
                        <div class="icon">
                            <i class="ik ik-file-text"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>



    </div>

    <!--Account Balance End -->






    <div class="row">
        <div class="col-md-6">
            <div class="card" style="min-height: 484px;">
                <div class="card-header"><h3>Send (GVCH)</h3></div>

                <div class="card-body">

                    @using (Html.BeginForm(FormMethod.Post, new { @class = "forms-sample" }))
                    {
                    <div style="color:red">@Html.Raw(TempData["msg"])</div>
                    @*<div class="form-group">
                            <label for="exampleInputEmail1">Wallet Address (GVCH) </label>
                            <select class="form-control" id="addrHolder" name="addrHolder">
                                @foreach (var item in publicKeys)
                                {
                                    <option value="@item">@item</option>
                                }
                            </select>
                        </div>*@
                    <div class="form-group">
                        <label for="exampleInputEmail1">Gravity Cash Address (GVCH) </label>
                        <input type="text" class="form-control" id="addr" name="addr" placeholder="Address" required>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1">Amount (GVCH)</label>
                        <input type="text" class="form-control" id="amnt" name="amnt" placeholder="Amount" required>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputConfirmPassword1">Fee</label>
                        <input type="text" class="form-control" id="feee" name="feee" placeholder="Estimated Fee" readonly="readonly">
                    </div>

                    @*<div class="form-group">
                            <label for="exampleInputPassword1">Balance (GVCH)</label>
                            <input type="text" class="form-control" id="blnc" placeholder="" readonly="readonly">
                        </div>*@
                    <div class="form-group">

                    </div>
                    <button type="submit" class="btn btn-primary mr-2">Send</button>
                    }
                </div>

            </div>
        </div>
    </div>



</div>



<script>


    //$('#addrHolder').on('change',async function () {
    //    var $this = $(this);
    //    var addr = $this.val();
    //    var val = await contract.balanceOf(addr);
    //    val = parseInt(val.toString()) / 10 ** 18;
    //    $('#blnc').val(val);
    //})


        @*$('#amnt').keyup(function () {
            //var feis = parseFloat('@Admin.feis');
            //$('#feee').val($(this).val() * feis);


        })*@



    $(function () {

        $('#feee').val(0.01);

        //$('#addrHolder').change();
        //var totalCoins = totalCoin;

        //$.validator.addMethod('lessThanEqual', function (value, param) {
        //    totalCoin = $(param).text();
        //    console.log(totalCoin);
        //    return parseFloat(value + $('#feee').val()) <= parseFloat(totalCoin);
        //}, "Amount must be less than " + $(param).text());


        $.validator.addMethod('lessThanEqual', function(value, element, param) {
    if (this.optional(element)) return true;
            var i = parseFloat(value);
            var j = parseFloat($(param).text());
            i+=parseFloat($('#feee').val());
            console.log(i + '   ' + j);
            return i <= j;
        }, "Amount must be less than Total (GVCH)Balance");


            $("form:last").validate({
                rules: {
                    amnt: {
                        number: true,
                        lessThanEqual: '#totalBlnc'
                    }
                }
            });
        })

    //})




</script>