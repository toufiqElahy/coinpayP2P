@model UserWallet

    <div class="container-fluid">
        <div class="page-header">


            <div class="row align-items-end">
                <div class="col-lg-8">
                    <div class="page-header-title">
                        <i class="ik ik-minus-circle bg-dark"></i>
                        <div class="d-inline">
                            <h5> Coinpay Balance </h5>
                            <span>Balance Of Each Coin </span>
                        </div>
                    </div>
                </div>
                <div class="col-lg-4">
                    <nav class="breadcrumb-container" aria-label="breadcrumb">
                        <ol class="breadcrumb">

                            <li class="breadcrumb-item">

                            </li>


                        </ol>
                    </nav>
                </div>
            </div>

        </div>


        <!--Account Balance --><div class="row clearfix">
            <div class="col-lg-6 col-md-6 col-sm-12">
                <div class="widget bg-dark">
                    <div class="widget-body">
                        <div class="d-flex justify-content-between align-items-center">
                            <div class="state">
                                <h6>Coinpay Account Balance</h6>

                            </div>
                            <div class="icon">
                                <i class="ik ik-file-text"></i>

                            </div>
                        </div>
                    </div>
                </div>
            </div>



        </div>

        <!--Account Balance End -->

        <div class="row">
            <div class="col-md-6">
                <div class="card" style="">
                    <div class="card-header"><h3>Coin List</h3></div>

                    <div class="card-body">



                        <div class="">
                            <label for="amnt">Bitcoin Amount:</label>
                            <span>@Model.BTC BTC</span>
                        </div>

                        <div class="">
                            <label for="amnt">Ethereum Amount:</label>
                            <span>@Model.ETH ETH</span>
                        </div>
                        <div class="">
                            <label for="amnt">USD Amount:</label>
                            <span>@Model.USD USD</span>
                        </div>
                    </div>

                </div>
            </div>
        </div>






        <div class="row">
            <div class="col-md-6">
                <div class="card" style="min-height: 484px;">
                    <div class="card-header"><h3>Admin Form</h3></div>

                    <div class="card-body">

                        @using (Html.BeginForm(FormMethod.Post, new { @class = "forms-sample" }))
                        {
                            <div style="color:red">@Html.Raw(TempData["msg"])</div>

                            <div class="form-group">
                                <label for="exampleInputEmail1">Daily Interest Rate(%)</label>
                                <input type="text" class="form-control" id="iRate" name="iRate" placeholder="Daily Interest Rate(%)" value="@(LoanModel._dailyInterestRate*100)" required>
                            </div>
                          
                            <div class="form-group">
                                <label for="exampleInputPassword1">
                                    Collateral Rate(%)
                                </label>
                                <input type="number" min="5" max="90" class="form-control" id="cRate" name="cRate" placeholder="Collateral Rate(5-90%)" value="@LoanModel._cRate" required readonly>
                            </div>
                            <div class="form-group">
                                <label for="exampleInputPassword1">
                                    Loan Allowance Rate(%) [User cant take loan more than % of the coin]
                                </label>
                                <input type="text" class="form-control" id="aRate" name="aRate" placeholder="Loan Allowance Rate(%)" value="@LoanModel._allowanceRate" required>
                            </div>
                           

                           
                            <button type="submit" class="btn btn-primary mr-2">Submit</button>
                        }
                    </div>

                </div>
            </div>
        </div>



    </div>



<script>
    $('#usd,#cRate,#coin').on('change', function () {
        var coin = $('#coin').val();
        if (coin == "ETH") {
            coin = "ethereum";
        } else {
            coin = "bitcoin";
        }
        $.get("https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=" + coin + "", function (data, status) {
            console.log(data[0].current_price);
            var price = data[0].current_price;
            var val = 100-parseFloat($('#cRate').val());
            val = val / 100;
            var $val = parseFloat($('#usd').val());
            var crypto = $val / price;
            $('#amnt').val(crypto + (crypto * val));

        });
        


    })

    $('#usd,#iRate').on('change', function () {
        var val = parseFloat($('#iRate').val());
        val = val / 100;
        var $val = parseFloat($('#usd').val());
        $('#rpay').val($val + ($val * val));


        })

    


    $(function () {
        
        //$('#addrHolder').change();
        //var totalCoins = totalCoin;

        //$.validator.addMethod('lessThanEqual', function (value, param) {
        //    totalCoin = $(param).text();
        //    console.log(totalCoin);
        //    return parseFloat(value + $('#feee').val()) <= parseFloat(totalCoin);
        //}, "Amount must be less than " + $(param).text());
    //https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&ids=bitcoin //ethereum

        $.validator.addMethod('lessThanEqual', function(value, element, param) {
    if (this.optional(element)) return true;
            var i = parseFloat(value);
            var j = parseFloat($(param).text());
            i+=parseFloat($('#feee').val());
            console.log(i + '   ' + j);
            return i <= j;
        }, "Amount must be less than Total (GVCH)Balance");


            $("form:last").validate({
                rules: {
                    amnt: {
                        number: true,
                        //lessThanEqual: '#totalBlnc'
                    }
                }
            });
        })

    //})




</script>